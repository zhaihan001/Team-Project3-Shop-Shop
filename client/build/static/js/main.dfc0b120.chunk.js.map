{"version":3,"sources":["components/Shoplist.js","components/Banner.js","components/Home.js","components/Login.js","components/Signup.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Content","Wrap","ShopList","shops","title","length","src","alt","href","map","shop","image","businessName","_id","Banner","Slider","Home","main","Login","Signup","Navbar","Nav","NavMenu","nav","httpLink","img","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","className","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dfc0b120.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ShopList = ({ shops, title }) => {\n  if (!shops.length) {\n    return <h3>No Shops Yet</h3>;\n  }\n\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <Content>\n        <Wrap>\n          <img src=\"/images/soap.jpg\" alt=\"product\" />\n          <a href=\"/signup\">\n            <div>\n              <h4>Visit Shop</h4>\n            </div>\n            <h3>Marnie's Soaps</h3>\n          </a>\n        </Wrap>\n        <Wrap>\n          <img src=\"/images/soap.jpg\" alt=\"product\" />\n          <a href=\"/signup\">\n            <div>\n              <h4>Visit Shop</h4>\n            </div>\n            <h3>Marnie's Soaps</h3>\n          </a>\n        </Wrap>\n        {shops &&\n          shops.map((shop) => (\n            <Wrap>\n              <img src={shop.image} alt={shop.businessName} />\n              <a href={\"/shops/\" + shop._id}>\n                <div>\n                  <h4>Visit Shop</h4>\n                </div>\n                <h3>{shop.businessName}</h3>\n              </a>\n            </Wrap>\n          ))}\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 0 calc(3.5vw + 5px);\n  padding-top: 2vw;\n  padding-bottom: 13vw;\n\n  h2 {\n    font-size: 40px;\n    padding: 15px;\n    text-decoration: underline;\n    color: black;\n    font-weight: bold;\n    letter-spacing: 1px;\n    word-spacing: 4px;\n    text-underline-offset: 8px;\n  }\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-gap: 100px 40px;\n  grid-template-columns: repeat(4, minmax(0, 1fr));\n\n  @media (max-width: 1000px) {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n\n  @media (max-width: 700px) {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (max-width: 500px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`;\n\nconst Wrap = styled.div`\n  border-radius: 3px;\n  cursor: pointer;\n  position: relative;\n  border: 3px solid black;\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    z-index: 1;\n  }\n\n  h3 {\n    border-radius: 3px;\n    border: 3px solid rgba(249, 249, 249, 0.1);\n    background: grey;\n    padding: 4px;\n    color: white;\n    font-size: 30px;\n    text-align: center;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  a:visited {\n    text-decoration: none;\n    color: white;\n  }\n\n  div {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    object-fit: cover;\n    top: 0px;\n    opacity: 0;\n    z-index: 0;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    h4 {\n      color: white;\n      padding: 8px;\n      border-radius: 20px;\n      border: 3px solid rgba(249, 249, 249, 0.1);\n      background: grey;\n      transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n      &:hover {\n        background: orange;\n      }\n    }\n  }\n\n  &:hover {\n    transform: scale(1.05);\n    border-color: rgba(249, 249, 249, 0.8);\n    cursor: pointer;\n\n    h3 {\n      background: black;\n      color: white;\n    }\n\n    div {\n      opacity: 1;\n      object-fit: cover;\n      background: rgba(37, 39, 58, 0.76);\n    }\n  }\n`;\nexport default ShopList;\n","import React from 'react'\nimport styled from 'styled-components';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction Banner() {\n\n    let settings = {\n        arrows: true,\n        dots: true,\n        infinite: true,\n        speed: 600,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        // autoplay: true\n    }\n    \n  return (\n    <Carousel {...settings}>\n       <Wrap>\n        <img src=\"/images/soap.jpg\" alt=\"slide1\"/>\n       </Wrap>\n       <Wrap>\n        <img src=\"/images/camera.jpg\" alt=\"slide2\"/>\n       </Wrap>\n    </Carousel>\n  )\n}\n\nexport default Banner\n\nconst Carousel = styled(Slider)`\n    margin-top: 20px;\n\n    ul li button {\n        &:before {\n            font-size: 10px;\n            color: black;\n        }\n    }\n\n    li.slick-active button:before {\n        color: black;\n    }\n\n    .slick-list {\n        overflow: visible;\n    }\n\n    button {\n        z-index: 1;\n    }\n`\n\nconst Wrap = styled.div`\n    cursor: pointer;\n\n    img {\n        border: 4px solid black;\n        border-radius: 4px;\n        width: 100%;\n        height: 100%;\n        transition-duration: 300ms;\n\n        &:hover {\n            border: 4px solid grey;\n        }\n    }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport ShopList from './Shoplist'\nimport Banner from './Banner'\n\n// import styled from 'styled-components'\n\nfunction Home() {\n  return (\n<Container>\n    {/* <Banner /> */}\n    <ShopList />\n</Container>\n  )\n}\n\nexport default Home\n\nconst Container = styled.main`\n\nheight: 100vh;\nposition: relative;\noverflow-x: hidden;\noverflow-y: auto;\nbackground: white;\nperspective: 10px;\n\n&:before {\n  no-repeat fixed;\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n}\n`","import React from 'react'\n\nfunction Login() {\n  return (\n    <div>Login</div>\n  )\n}\n\nexport default Login","import React from 'react'\n\nfunction Signup() {\n  return (\n    <div>Signup</div>\n  )\n}\n\nexport default Signup","import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction Navbar() {\n  return (\n    <Nav>\n\n{/* <Icon src=\"https://c.tenor.com/TYWdCAZu258AAAAC/guardians-of-the-galaxy-rocket-raccoon.gif\"/> */}\n\n        <NavMenu>\n        <a>\n            {/* <img src='/images/saved-icon.png' alt='saved'/> */}\n            <span>SAVED</span>\n        </a>\n\n        <a>\n            {/* <img src='/images/shop-icon.png' alt='shop'/> */}\n            <span>MY SHOP</span>\n        </a>\n\n        <a>\n            {/* <img src='/images/profile-icon.png alt='profile'/> */}\n            <span>PROFILE</span>\n        </a>\n\n        <a>\n            {/* <img src='/images/cart-icon.png' alt='cart'/> */}\n            <span>CART</span>\n        </a>\n\n        <a href=\"/login\">\n            {/* <img src='/images/cart-icon.png' alt='cart'/> */}\n            <span>LOGIN</span>\n        </a>\n\n        </NavMenu>\n\n    </Nav>\n  )\n}\n\nexport default Navbar\n\nconst Nav = styled.nav`\nheight: 70px;\nbackground: black;\ndisplay: flex;\nalign-items: center;\npadding: 0 36px;\noverflow-x: hidden;\n\n`\n\nconst NavMenu = styled.div`\n    display: flex;\n    flex: 1;\n    justify-content: space-around;\n    margin-left: 25px;\n    align-items: center;\n\n    a:visited { \n        text-decoration: none;\n        color: white; \n       }\n    \n\n    a {\n        display: flex;\n        align-items: center;\n        padding: 0 12px;\n        cursor: pointer;\n        color: white;\n        text-decoration: none; \n\n        img {\n            height: 20px;\n        }\n\n        span {\n            font-size: 13px;\n            letter-spacing: 1.42px;\n            position: relative;\n            font-size: 20px;\n            font-weight: bold;\n\n            &:after {\n                content: \"\";\n                height: 2px;\n                background: white;\n                position: absolute;\n                left: 0;\n                right: 0;\n                bottom: -5px;\n                opacity: 0;\n                transform-origin: center;\n                transition: all 400ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n                transform: scaleX(0);\n                color: white;\n            }\n        }\n\n        &:hover {\n            color: white;\n            span:after {\n                transform: scaleX(1);\n                opacity: 1;\n                color: white;\n            }\n        }\n    }\n`\n\nconst Icon = styled.img`\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    cursor: pointer;\n`","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// PAGES\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Navbar from './components/Navbar';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n   <div className=\"App\">\n      <Router>\n\n        <Navbar />\n        <Routes>\n\n        <Route path=\"/\" element={<Home />} />\n\n        <Route path=\"/login\" element={<Login />} />\n\n        <Route path=\"/signup\" element={<Signup />} />\n\n        </Routes>\n\n      </Router>\n    </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}